package temperance.protobuf;

option optimize_for = SPEED;

message Request {
    message Add {
        required string key = 1;
        required string value = 2;
        optional uint32 expire = 3 [default = 86400];
    }
    message Get {
        required string key = 1;
        
        optional uint64 offset = 2 [default = 0];
        optional uint64 limit = 3 [default = 1000]; 
    }
    message Count {
        required string key = 1;
    }
    message Delete {
        required string key = 1;
        optional uint32 expire = 2 [default = 0];
    }
    message DeleteByValue {
        required string key = 1;
        required string value = 2;
        optional uint32 expire = 3 [default = 0];
    }
    message Reindex {
        required string key = 1;
    }
}
message Response {
    enum Status {
        SUCCESS = 0;
        ENQUEUE = 1;
        
        FAILURE = 10;
        TIMEOUT = 11;
    }

    message Add {
        required Status status = 1;
    }
    message Get {
        repeated string values = 1;
    }
    message Count {
        required uint64 count = 1;
    }
    message Delete {
        required Status status = 1;
    }
    message DeleteByValue {
        required Status status = 1;
    }
    message Reindex {
        required Status status = 1;
    }
}

service ListService {
    rpc add(Request.Add) returns(Response.Add);
    rpc get(Request.Get) returns(Response.Get);
    rpc count(Request.Count) returns(Response.Count);
    rpc delete(Request.Delete) returns(Response.Delete);
    rpc deleteByValue(Request.DeleteByValue) returns(Response.DeleteByValue);
    
    rpc reindex(Request.Reindex) returns(Response.Reindex);
}
